{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","components/Notification.js","App.js","components/PersonService.js","index.js"],"names":["PersonForm","addPerson","newName","setNewName","newNumber","setNewNumber","onSubmit","value","onChange","event","target","type","Persons","list","deletePerson","map","person","name","number","onClick","Filter","filter","setFilter","Notification","notification","className","success","message","App","useState","persons","setPersons","setNotification","useEffect","axios","get","then","response","data","notifyWithTimeout","setTimeout","filteredList","toLowerCase","includes","ev","preventDefault","p","window","confirm","existing","find","put","id","concat","post","delete","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73bd7a40.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({addPerson, newName, setNewName, newNumber, setNewNumber}) =>\r\n  <form onSubmit={addPerson}>\r\n    <div>Name: <input value={newName} onChange={(event) => setNewName(event.target.value)}/></div>\r\n    <div>Number: <input value={newNumber} onChange={(event) => setNewNumber(event.target.value)}/></div>\r\n    <div>\r\n      <button type=\"submit\">Submit</button>\r\n    </div>\r\n  </form>\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({list, deletePerson}) => <div>{list.map(person => <p key={person.name}>{person.name} {person.number} <button type=\"button\" onClick={() => deletePerson({...person})}>delete</button></p>)}</div>\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({filter, setFilter}) => <div>Add filter: <input value={filter} onChange={(event) => setFilter(event.target.value)}/></div>\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nimport '../notification.css'\r\n\r\nconst Notification = ({notification}) => {\r\n  if ('success' in notification) {\r\n      return <div className={notification.success ? 'success' : 'error'}>{notification.message}</div>\r\n  }\r\n  return <div />\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm.js'\nimport Persons from './components/Persons.js'\nimport Filter from './components/Filter.js'\nimport Notification from './components/Notification.js'\nimport { getAllPersons, addPerson, deletePerson, updatePerson } from './components/PersonService.js'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState({})\n\n  useEffect(() => {\n    getAllPersons().then(persons => setPersons(persons))\n  }, [])\n\n  const notifyWithTimeout = (message, success) => {\n    setNotification({message, success})\n    setTimeout(() => {\n      setNotification({})\n    }, 3000)\n  }\n\n  const doAddPerson = (ev) => {\n    ev.preventDefault()\n    if(persons.map(p => p.name).includes(newName)) {\n      if (window.confirm(`${newName} is already in the phonebook, replace old number with a new number?`)) {\n        const existing = persons.find(p => p.name.includes(newName))\n        updatePerson({...existing, number: newNumber}).then(data => setPersons(persons.filter(p => p.id !== data.id).concat(data))).then(() => notifyWithTimeout(`${newName} number was updated.`, true))\n      }\n    } else {\n      const newPerson = {name: newName, number: newNumber}\n      addPerson(newPerson).then(data => setPersons(persons.concat(data))).then(() => notifyWithTimeout(`Added ${newName} to phonebook.`, true))\n    }\n  }\n\n  const byNamefilter = (person) => person.name.toLowerCase().includes(filter.toLowerCase())\n\n  const filteredList = persons.filter(byNamefilter)\n\n  const deleteWithConfirm = ({id, name}) => { \n    if (window.confirm(`Do you want to delete ${name} from the phonebook?`)) { \n        deletePerson(id)\n          .then(() => notifyWithTimeout(`Deleted ${name} from the phonebook.`, true))\n          .catch(() => notifyWithTimeout(`Person ${name} was already deleted.`, false))\n        setPersons(persons.filter(p => p.id !== id))\n      }\n    }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter filter={filter} setFilter={setFilter} />\n      <h3>Add new number</h3>\n      <PersonForm addPerson={doAddPerson} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} />\n      <h2>Numbers</h2>\n      <Persons list={filteredList} deletePerson={deleteWithConfirm}/>\n    </div>\n  )\n\n}\n\nexport default App\n","  import axios from 'axios'\r\n  const baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAllPersons = () => axios.get(baseUrl).then(response => response.data)\r\n\r\nconst addPerson = (data) => axios.post('http://localhost:3001/api/persons', data).then(response => response.data)\r\n\r\nconst deletePerson = (id) => axios.delete(`http://localhost:3001/api/persons/${id}`).then(response => response.data)\r\n\r\nconst updatePerson = (data) => axios.put(`http://localhost:3001/api/persons/${data.id}`, data).then(response => response.data)\r\n\r\nexport { getAllPersons, addPerson, deletePerson, updatePerson }","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}